
diagram {
	LteHelper; LteUeNetDevice; EpcUeNas; LteUeRrc; LteEnbRrc; EpcEnbApplication; EpcSgwPgwApplication; EpcHelper;	
	
	LteHelper -> LteUeNetDevice [label="Attach (eNB)"];
	LteHelper -> LteUeRrc [label="Set eNB"];
	LteUeNetDevice -> EpcUeNas [label="Connect"];
	EpcUeNas => LteUeRrc [label="Connect"] {
		LteUeRrc => LteEnbRrc [label="Connection Request (IMSI)"] {
			=== RRC connection establishment ===
			LteEnbRrc -> LteEnbRrc [label="store IMSI<->RNTI mapping"];			
		}
	}	
	
	EpcUeNas => EpcHelper [label="ActivateEpsBearer(UeDevice, EnbDevice, Tft::Default)"] {
		EpcHelper => EpcSgwPgwApplication [label="ActivateS1Bearer (UE IP, eNB IP, IMSI, Tft::Default)", return="TEID"] {
			EpcSgwPgwApplication => EpcSgwPgwApplication [label="Store UE IP<->eNB IP mapping"];
			EpcSgwPgwApplication => EpcSgwPgwApplication [label="Create GTP-U tunnel endpoint"];
		}
		EpcHelper => EpcEnbApplication [label="ErabSetupRequest(TEID, IMSI)"] {
			EpcEnbApplication => LteEnbRrc [label="RadioBearerSetupRequest (IMSI)", return="RadioBearerSetupCompleted (RNTI, LCID)"] {
				LteEnbRrc => LteUeRrc [label="RRC connection reconfiguration"];
			}
			EpcEnbApplication -> EpcEnbApplication [label="Create GTP-U tunnel endpoint (TEID)"];
			EpcEnbApplication -> EpcEnbApplication [label="store TEID<->(RNTI,LCID) mapping"];
		}  
	}
	
}

